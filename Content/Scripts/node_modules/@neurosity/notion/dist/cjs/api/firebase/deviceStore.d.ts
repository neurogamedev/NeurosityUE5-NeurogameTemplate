export interface IDevice {
    info: any;
    status: any;
    subscriptions: any;
    metrics: any;
}
/**
 * @hidden
 */
export declare const createDeviceStore: (app: any, deviceId: any, subscriptionManager: any) => {
    set: (namespace: any, payload: any) => any;
    once: (namespace: any, eventType?: string) => Promise<any>;
    update: (namespace: any, payload: any) => any;
    lastOfChildValue: (namespace: any, key: any, value: any) => Promise<unknown>;
    onNamespace: (namespace: string, callback: Function) => Function;
    offNamespace: (namespace: string, listener: Function) => void;
    dispatchAction: (action: any) => Promise<any>;
    nextMetric: (metricName: string, metricValue: {
        [label: string]: any;
    }) => Promise<void>;
    onMetric: (subscription: any, callback: Function) => any;
    subscribeToMetric: (subscription: any) => any;
    unsubscribeFromMetric: (subscription: any) => void;
    removeMetricListener(subscription: any, listener: Function): void;
    disconnect(): void;
};
