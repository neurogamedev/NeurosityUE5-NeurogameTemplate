"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ipk_1 = require("@neurosity/ipk");
exports.isNotionMetric = (metric) => Object.keys(ipk_1.metrics).includes(metric);
exports.getLabels = (metric) => Object.keys(ipk_1.metrics[metric]);
exports.hasInvalidLabels = (metric, labels) => {
    const validLabels = exports.getLabels(metric);
    return !labels.every((label) => validLabels.includes(label));
};
exports.isMetricDisallowed = (metricName, options) => "skill" in options &&
    "metrics" in options.skill &&
    !options.skill.metrics.includes(metricName);
exports.validate = (metric, labels, options) => {
    const validLabels = exports.getLabels(metric).join(", ");
    if (!labels.length) {
        return new Error(`At least one label is required for ${metric} metric. Please add one of the following labels: ${validLabels}`);
    }
    if (exports.isMetricDisallowed(metric, options)) {
        return new Error(`No permission to access the ${metric} metric. To access this metric, edit the skill's permissions`);
    }
    if (exports.hasInvalidLabels(metric, labels)) {
        return new Error(`One ore more labels provided to ${metric} are invalid. The valid labels for ${metric} are ${validLabels}`);
    }
    return false;
};
